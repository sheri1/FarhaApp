{"ast":null,"code":"import State from \"./state\";\nimport DeprecatedUtils from \"./deprecatedUtils\";\nvar _isSetup = false;\n\nvar _subscriptions = new Set();\n\nvar _latestState = null;\n\nfunction _handler(state) {\n  var convertedState = DeprecatedUtils.convertState(state);\n  _latestState = convertedState;\n\n  _subscriptions.forEach(function (handler) {\n    return handler(convertedState);\n  });\n}\n\nexport function setup() {\n  if (_isSetup) {\n    return;\n  }\n\n  State.add(_handler);\n}\nexport function tearDown() {\n  if (!_isSetup) {\n    return;\n  }\n\n  State.remove(_handler);\n  _latestState = null;\n\n  _subscriptions.clear();\n}\nexport function latest() {\n  if (_latestState) {\n    return Promise.resolve(_latestState);\n  } else {\n    return State.latest().then(function (state) {\n      _latestState = DeprecatedUtils.convertState(state);\n      return _latestState;\n    });\n  }\n}\nexport function add(handler) {\n  _subscriptions.add(handler);\n\n  if (_latestState) {\n    handler(_latestState);\n  } else {\n    latest().then(handler);\n  }\n}\nexport function remove(handler) {\n  _subscriptions.delete(handler);\n}\nexport default {\n  setup: setup,\n  tearDown: tearDown,\n  latest: latest,\n  add: add,\n  remove: remove\n};","map":{"version":3,"sources":["deprecatedState.ts"],"names":["_isSetup","_subscriptions","_latestState","convertedState","DeprecatedUtils","handler","State","Promise","latest","setup","tearDown","add","remove"],"mappings":"AASA,OAAA,KAAA;AAGA,OAAA,eAAA;AAEA,IAAIA,QAAQ,GAAZ,KAAA;;AACA,IAAMC,cAAc,GAAG,IAAvB,GAAuB,EAAvB;;AACA,IAAIC,YAAgD,GAApD,IAAA;;AAEA,SAAA,QAAA,CAAA,KAAA,EAAmD;AACjD,MAAMC,cAAc,GAAGC,eAAe,CAAfA,YAAAA,CAAvB,KAAuBA,CAAvB;AACAF,EAAAA,YAAY,GAAZA,cAAAA;;AACAD,EAAAA,cAAc,CAAdA,OAAAA,CAAuB,UAAA,OAAA,EAAA;AAAA,WAAmBI,OAAO,CAA1B,cAA0B,CAA1B;AAAvBJ,GAAAA;AAGF;;AAAA,OAAO,SAAA,KAAA,GAAuB;AAE5B,MAAA,QAAA,EAAc;AACZ;AAGFK;;AAAAA,EAAAA,KAAK,CAALA,GAAAA,CAAAA,QAAAA;AAGF;AAAA,OAAO,SAAA,QAAA,GAA0B;AAE/B,MAAI,CAAJ,QAAA,EAAe;AACb;AAGFA;;AAAAA,EAAAA,KAAK,CAALA,MAAAA,CAAAA,QAAAA;AACAJ,EAAAA,YAAY,GAAZA,IAAAA;;AACAD,EAAAA,cAAc,CAAdA,KAAAA;AAGF;AAAA,OAAO,SAAA,MAAA,GAAwD;AAC7D,MAAA,YAAA,EAAkB;AAChB,WAAOM,OAAO,CAAPA,OAAAA,CAAP,YAAOA,CAAP;AADF,GAAA,MAEO;AACL,WAAOD,KAAK,CAALA,MAAAA,GAAAA,IAAAA,CACL,UAAA,KAAA,EAAwC;AACtCJ,MAAAA,YAAY,GAAGE,eAAe,CAAfA,YAAAA,CAAfF,KAAeE,CAAfF;AACA,aAAA,YAAA;AAHJ,KAAOI,CAAP;AAOH;AAED;AAAA,OAAO,SAAA,GAAA,CAAA,OAAA,EAA2D;AAEhEL,EAAAA,cAAc,CAAdA,GAAAA,CAAAA,OAAAA;;AAGA,MAAA,YAAA,EAAkB;AAChBI,IAAAA,OAAO,CAAPA,YAAO,CAAPA;AADF,GAAA,MAEO;AACLG,IAAAA,MAAM,GAANA,IAAAA,CAAAA,OAAAA;AAEH;AAED;AAAA,OAAO,SAAA,MAAA,CAAA,OAAA,EAA8D;AACnEP,EAAAA,cAAc,CAAdA,MAAAA,CAAAA,OAAAA;AAGF;AAAA,eAAe;AACbQ,EAAAA,KAAK,EADQ,KAAA;AAEbC,EAAAA,QAAQ,EAFK,QAAA;AAGbF,EAAAA,MAAM,EAHO,MAAA;AAIbG,EAAAA,GAAG,EAJU,GAAA;AAKbC,EAAAA,MAAM,EALR;AAAe,CAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport State from './state';\nimport * as DeprecatedTypes from './deprecatedTypes';\nimport * as Types from './types';\nimport DeprecatedUtils from './deprecatedUtils';\n\nlet _isSetup = false;\nconst _subscriptions = new Set<DeprecatedTypes.ChangeHandler>();\nlet _latestState: DeprecatedTypes.NetInfoData | null = null;\n\nfunction _handler(state: Types.NetInfoState): void {\n  const convertedState = DeprecatedUtils.convertState(state);\n  _latestState = convertedState;\n  _subscriptions.forEach((handler): void => handler(convertedState));\n}\n\nexport function setup(): void {\n  // Skip if we are already setup\n  if (_isSetup) {\n    return;\n  }\n\n  State.add(_handler);\n}\n\nexport function tearDown(): void {\n  // Skip if we are not setup\n  if (!_isSetup) {\n    return;\n  }\n\n  State.remove(_handler);\n  _latestState = null;\n  _subscriptions.clear();\n}\n\nexport function latest(): Promise<DeprecatedTypes.NetInfoData> {\n  if (_latestState) {\n    return Promise.resolve(_latestState);\n  } else {\n    return State.latest().then(\n      (state): DeprecatedTypes.NetInfoData => {\n        _latestState = DeprecatedUtils.convertState(state);\n        return _latestState;\n      },\n    );\n  }\n}\n\nexport function add(handler: DeprecatedTypes.ChangeHandler): void {\n  // Add the subscription handler to our set\n  _subscriptions.add(handler);\n\n  // Send the latest state we have on listen\n  if (_latestState) {\n    handler(_latestState);\n  } else {\n    latest().then(handler);\n  }\n}\n\nexport function remove(handler: DeprecatedTypes.ChangeHandler): void {\n  _subscriptions.delete(handler);\n}\n\nexport default {\n  setup,\n  tearDown,\n  latest,\n  add,\n  remove,\n};\n"]},"metadata":{},"sourceType":"module"}