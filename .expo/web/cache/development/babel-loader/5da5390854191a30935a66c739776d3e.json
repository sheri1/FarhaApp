{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport firebaseConfig from \"./firebaseConfig\";\nfirebase.initializeApp(firebaseConfig);\nvar Firebase = {\n  auth: firebase.auth(),\n  loginWithEmail: function loginWithEmail(email, password) {\n    return firebase.auth().signInWithEmailAndPassword(email, password);\n  },\n  signupWithEmail: function signupWithEmail(email, password) {\n    return firebase.auth().createUserWithEmailAndPassword(email, password);\n  },\n  signOut: function signOut() {\n    return firebase.auth().signOut();\n  },\n  checkUserAuth: function checkUserAuth(user) {\n    return firebase.auth().onAuthStateChanged(user);\n  },\n  createUserDocument: function createUserDocument(user, additionalData) {\n    var userRef, snapshot, displayName, email, photoURL, createdAt;\n    return _regeneratorRuntime.async(function createUserDocument$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (user) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            userRef = firebase.firestore().doc(\"users/\" + user.uid);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(userRef.get());\n\n          case 5:\n            snapshot = _context.sent;\n\n            if (snapshot.exists) {\n              _context.next = 17;\n              break;\n            }\n\n            displayName = user.displayName, email = user.email, photoURL = user.photoURL;\n            createdAt = new Date();\n            _context.prev = 9;\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(userRef.set(_objectSpread({\n              displayName: displayName,\n              email: email,\n              photoURL: photoURL,\n              createdAt: createdAt\n            }, additionalData)));\n\n          case 12:\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](9);\n            console.error('Error creating user', console.error);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[9, 14]]);\n  },\n  getUserDocument: function getUserDocument(uid) {\n    var userDocument;\n    return _regeneratorRuntime.async(function getUserDocument$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (uid) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", null);\n\n          case 2:\n            _context2.prev = 2;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(firebase.firestore().collection('users').doc(uid).get());\n\n          case 5:\n            userDocument = _context2.sent;\n            return _context2.abrupt(\"return\", _objectSpread({\n              uid: uid\n            }, userDocument.data()));\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](2);\n            console.error('Error fetching user', _context2.t0.message);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[2, 9]]);\n  },\n  updateUserDocument: function updateUserDocument(uid, userDate) {\n    var userDocument;\n    return _regeneratorRuntime.async(function updateUserDocument$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (uid) {\n              _context3.next = 2;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", null);\n\n          case 2:\n            _context3.prev = 2;\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(firebase.firestore().collection('users').doc(uid));\n\n          case 5:\n            userDocument = _context3.sent;\n            userDocument.update(_objectSpread({}, userDate));\n            _context3.next = 12;\n            break;\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](2);\n            console.log('Error');\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[2, 9]]);\n  }\n};\nexport default Firebase;","map":{"version":3,"sources":["C:/Users/jit/Desktop/farhasheri/config/Firebase/firebase.js"],"names":["firebase","firebaseConfig","initializeApp","Firebase","auth","loginWithEmail","email","password","signInWithEmailAndPassword","signupWithEmail","createUserWithEmailAndPassword","signOut","checkUserAuth","user","onAuthStateChanged","createUserDocument","additionalData","userRef","firestore","doc","uid","get","snapshot","exists","displayName","photoURL","createdAt","Date","set","console","error","getUserDocument","collection","userDocument","data","message","updateUserDocument","userDate","update","log"],"mappings":"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","sourcesContent":["import * as firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\nimport firebaseConfig from './firebaseConfig'\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nconst Firebase = {\r\n  // auth aya\r\n\r\n  auth:firebase.auth(),\r\n  \r\n  \r\n  loginWithEmail: (email, password) => {\r\n    return firebase.auth().signInWithEmailAndPassword(email, password)\r\n  },\r\n  signupWithEmail: (email, password ) => {\r\n   return firebase.auth().createUserWithEmailAndPassword(email, password)\r\n  },\r\n  signOut: () => {\r\n    return firebase.auth().signOut()\r\n  },\r\n  checkUserAuth: user => {\r\n    return firebase.auth().onAuthStateChanged(user)\r\n  },\r\n\r\n  // firestore\r\n  // createNewUser: userData => {\r\n  //   return firebase\r\n  //     .firestore()\r\n  //     .collection('users')\r\n  //     .doc(`${userData.uid}`)\r\n  //     .set(userData)\r\n  // }\r\n\r\n  createUserDocument : async (user, additionalData) => {\r\n    // If there is no user, let's not do this.\r\n    if (!user) return;\r\n    // Get a reference to the location in the Firestore where the user\r\n    // document may or may not exist.\r\n    const userRef = firebase.firestore().doc(`users/${user.uid}`);\r\n    // Go and fetch a document from that location.\r\n    const snapshot = await userRef.get();\r\n    // If there isn't a document for that user. Let's use information\r\n    // that we got from either Google or our sign up form.\r\n    if (!snapshot.exists) {\r\n      const { displayName, email, photoURL } = user;\r\n      const createdAt = new Date();\r\n      try {\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          photoURL,\r\n          createdAt,\r\n          ...additionalData,\r\n        });\r\n      } catch (error) {\r\n        console.error('Error creating user', console.error);\r\n      }\r\n    }\r\n  },\r\n\r\n  \r\n  getUserDocument : async uid => {\r\n    if (!uid) return null;\r\n    try {\r\n      const userDocument = await firebase\r\n        .firestore()\r\n        .collection('users')\r\n        .doc(uid)\r\n        .get();\r\n      return { uid, ...userDocument.data() };\r\n    } catch (error) {\r\n      console.error('Error fetching user', error.message);\r\n    }\r\n  },\r\n\r\n  updateUserDocument: async (uid,userDate) => {\r\n    if(!uid) return null;\r\n\r\n    try {\r\n      const userDocument = await firebase\r\n        .firestore()\r\n        .collection('users')\r\n        .doc(uid);\r\n\r\n        userDocument.update({...userDate})\r\n    } catch (error){\r\n      console.log('Error')\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default Firebase"]},"metadata":{},"sourceType":"module"}