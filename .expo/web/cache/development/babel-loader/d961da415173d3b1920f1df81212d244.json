{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\jit\\\\Desktop\\\\farhasheri\\\\screens\\\\ManagerHallsScreen\\\\ManagerHallsScreen.js\";\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport styles from \"./ManagerHallsScreenStyle\";\nimport Constants from 'expo-constants';\nimport StyledText from \"../../components/StyledTexts/StyledText\";\nimport StyledTextBold from \"../../components/StyledTexts/StyledTextBold\";\nimport HeaderMenu from \"../../components/HeadersComponent/HeaderMenu\";\nimport { SearchBar } from \"react-native-elements\";\nimport { MaterialCommunityIcons, AntDesign, Entypo } from '@expo/vector-icons';\nimport SearchList from \"../../components/SearchList\";\nimport { Rating } from 'react-native-elements';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport moment from \"moment\";\nimport * as firebase from 'firebase';\n\nvar ManagerHallsScreen = function (_Component) {\n  _inherits(ManagerHallsScreen, _Component);\n\n  function ManagerHallsScreen(props) {\n    var _this;\n\n    _classCallCheck(this, ManagerHallsScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ManagerHallsScreen).call(this, props));\n\n    _this.selectItem = function (id) {\n      var listDataCopy = JSON.parse(JSON.stringify(_this.state.regionsList));\n      listDataCopy.forEach(function (elem) {\n        elem.isSelect = false;\n\n        if (elem.id === id) {\n          elem.isSelect = true;\n        }\n      });\n      var filter = listDataCopy[id].name;\n\n      _this.setState({\n        regionsList: listDataCopy,\n        reginFilter: filter\n      });\n    };\n\n    _this.toggleSwitch = function () {\n      _this.setState({\n        mostBooked: !_this.state.mostBooked\n      });\n    };\n\n    _this.updateSearch = function (search) {};\n\n    _this.state = {\n      search: \"\",\n      searchList: [],\n      modalVisible: false,\n      hallPersonNum: 300,\n      priceValue: 0,\n      date: new Date(),\n      showDate: false,\n      Selecteddate: '',\n      mostBooked: true,\n      minPrice: '',\n      maxPrice: ''\n    };\n    return _this;\n  }\n\n  _createClass(ManagerHallsScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var user = firebase.auth().currentUser;\n      var halls = firebase.firestore().collection(\"halls\");\n      var query = halls.where(\"owner\", \"==\", user.uid).get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          var hallData = doc.data();\n          var hallListData = [];\n          hallListData.push({\n            id: doc.id,\n            image: hallData.hallImage,\n            name: hallData.name,\n            location: hallData.address,\n            discount: null,\n            uri: true\n          });\n\n          _this2.setState(function (prevState) {\n            return {\n              searchList: [].concat(_toConsumableArray(prevState.searchList), hallListData)\n            };\n          });\n        });\n      }).catch(function (error) {\n        console.log(\"Error getting documents: \", error);\n      });\n    }\n  }, {\n    key: \"ratingCompleted\",\n    value: function ratingCompleted(rating) {\n      console.log(\"Rating is: \" + rating);\n    }\n  }, {\n    key: \"selectDate\",\n    value: function selectDate(value) {\n      this.setState({\n        showDate: false,\n        showTimer: false\n      });\n      var SelectedDateTime = value;\n      var Selecteddate = moment(value).format(\"YYYY-MM-DD\");\n      var SelectedTime = moment(value).format(\"h:mm:ss\");\n      this.setState({\n        Selecteddate: Selecteddate\n      });\n    }\n  }, {\n    key: \"searchFilter\",\n    value: function searchFilter() {\n      this.setState({\n        modalVisible: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.containerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        }\n      }, React.createElement(View, {\n        style: styles.StatusBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        }\n      }, React.createElement(StatusBar, {\n        barStyle: \"light-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        }\n      }, React.createElement(HeaderMenu, {\n        navigation: this.props.navigation,\n        title: \"\\u0627\\u0644\\u0635\\u0627\\u0644\\u0627\\u062A \\u0627\\u0644\\u062E\\u0627\\u0635\\u0629 \\u0628\\u064A\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        }\n      })), React.createElement(View, {\n        style: {\n          width: '100%',\n          marginTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        }\n      }, React.createElement(ScrollView, {\n        style: {\n          width: '100%'\n        },\n        showsVerticalScrollIndicator: false,\n        snapToStart: true,\n        contentContainerStyle: {\n          flexGrow: 1,\n          justifyContent: 'flex-start',\n          backgroundColor: '#fff',\n          paddingBottom: 60,\n          paddingTop: 20,\n          paddingHorizontal: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        }\n      }, React.createElement(View, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        }\n      }, React.createElement(React.Fragment, null, React.createElement(View, {\n        style: styles.storiesImagesCont,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        }\n      }, React.createElement(SearchList, {\n        navigation: this.props.navigation,\n        details: this.state.searchList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        }\n      })))))));\n    }\n  }, {\n    key: \"clearSearch\",\n    value: function clearSearch() {}\n  }, {\n    key: \"SearchAboutProducts\",\n    value: function SearchAboutProducts(searchText) {}\n  }]);\n\n  return ManagerHallsScreen;\n}(Component);\n\nexport { ManagerHallsScreen as default };","map":{"version":3,"sources":["C:/Users/jit/Desktop/farhasheri/screens/ManagerHallsScreen/ManagerHallsScreen.js"],"names":["React","Component","styles","Constants","StyledText","StyledTextBold","HeaderMenu","SearchBar","MaterialCommunityIcons","AntDesign","Entypo","SearchList","Rating","DateTimePicker","moment","firebase","ManagerHallsScreen","props","selectItem","id","listDataCopy","JSON","parse","stringify","state","regionsList","forEach","elem","isSelect","filter","name","setState","reginFilter","toggleSwitch","mostBooked","updateSearch","search","searchList","modalVisible","hallPersonNum","priceValue","date","Date","showDate","Selecteddate","minPrice","maxPrice","user","auth","currentUser","halls","firestore","collection","query","where","uid","get","then","querySnapshot","doc","hallData","data","hallListData","push","image","hallImage","location","address","discount","uri","prevState","catch","error","console","log","rating","value","showTimer","SelectedDateTime","format","SelectedTime","containerStyle","StatusBar","navigation","width","marginTop","flexGrow","justifyContent","backgroundColor","paddingBottom","paddingTop","paddingHorizontal","storiesImagesCont","searchText"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, ScrollView, StatusBar,TouchableOpacity,Image,Modal,TextInput,Switch} from \"react-native\";\r\nimport styles from \"./ManagerHallsScreenStyle\";\r\nimport Constants from 'expo-constants'\r\nimport StyledText from '../../components/StyledTexts/StyledText'\r\nimport StyledTextBold from '../../components/StyledTexts/StyledTextBold'\r\nimport HeaderMenu from '../../components/HeadersComponent/HeaderMenu'\r\nimport { SearchBar } from \"react-native-elements\";\r\nimport {MaterialCommunityIcons,AntDesign,Entypo} from '@expo/vector-icons'\r\nimport SearchList from '../../components/SearchList'\r\nimport { Rating } from 'react-native-elements';\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\nimport moment from \"moment\";\r\nimport * as firebase from 'firebase';\r\n\r\nexport default class ManagerHallsScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      search: \"\",\r\n      searchList:[],\r\n      modalVisible:false,\r\n      hallPersonNum:300,\r\n      priceValue:0,\r\n\r\n      date:new Date(),\r\n      showDate:false,\r\n      Selecteddate:'',\r\n      mostBooked:true,\r\n      minPrice:'',\r\n      maxPrice:''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = firebase.auth().currentUser;\r\n    var halls = firebase.firestore().collection(\"halls\");\r\n    var query = halls.where(\"owner\", \"==\", user.uid)\r\n      .get().then((querySnapshot)  => {\r\n          querySnapshot.forEach((doc) => {\r\n            const hallData = doc.data();\r\n            let hallListData = [];\r\n            hallListData.push(\r\n              {id:doc.id,\r\n                image: hallData.hallImage,\r\n                name: hallData.name,\r\n               \r\n                location:hallData.address,\r\n                discount:null,\r\n                uri:true\r\n                \r\n                }\r\n            )\r\n            this.setState(prevState => ({\r\n              searchList: [...prevState.searchList, ...hallListData]\r\n            }))\r\n              \r\n        });\r\n      })\r\n      .catch(function(error) {\r\n        console.log(\"Error getting documents: \", error);\r\n    });\r\n\r\n  }\r\n\r\n  selectItem = (id) => {\r\n    let listDataCopy = JSON.parse(JSON.stringify(this.state.regionsList));\r\n    listDataCopy.forEach((elem) => {\r\n      elem.isSelect = false;\r\n      if (elem.id === id) {\r\n        elem.isSelect = true;\r\n      }\r\n    });\r\n    const filter = listDataCopy[id].name;\r\n    this.setState({\r\n      regionsList: listDataCopy,\r\n      reginFilter: filter,\r\n    });\r\n  }\r\n\r\n  ratingCompleted(rating) {\r\n    console.log(\"Rating is: \" + rating)\r\n  }\r\n\r\n  selectDate(value){\r\n    this.setState({showDate:false,showTimer:false})\r\n    const SelectedDateTime = value;\r\n    const Selecteddate = moment(value).format(\"YYYY-MM-DD\");\r\n    const SelectedTime = moment(value).format(\"h:mm:ss\");\r\n    // console.log(Selecteddate , SelectedTime)\r\n    this.setState({Selecteddate:Selecteddate})\r\n  } \r\n\r\n  toggleSwitch = () => {\r\n    this.setState({mostBooked: ! this.state.mostBooked})\r\n  }\r\n\r\n  searchFilter(){\r\n    this.setState({modalVisible:false})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.containerStyle}>          \r\n        <View style={styles.StatusBar}>\r\n          <StatusBar barStyle=\"light-content\"/>\r\n        </View>\r\n        <View>\r\n          <HeaderMenu navigation={this.props.navigation} title='الصالات الخاصة بي'></HeaderMenu>\r\n        </View>\r\n        <View style={{ width: '100%',marginTop: 10}}>\r\n          <ScrollView\r\n            style={{ width: '100%' }}\r\n            showsVerticalScrollIndicator={false} snapToStart={true}\r\n            contentContainerStyle={{flexGrow:1,justifyContent:'flex-start',backgroundColor:'#fff',paddingBottom:60,paddingTop:20,paddingHorizontal:10}}\r\n          >\r\n\r\n       \r\n\r\n\r\n            <View style={{width: '100%'}}>\r\n            \r\n                <>\r\n                <View style={styles.storiesImagesCont}>\r\n                    <SearchList \r\n                      navigation={this.props.navigation}\r\n                      details={this.state.searchList}\r\n                    />\r\n                  </View>\r\n                </>\r\n            \r\n            </View>\r\n\r\n           \r\n          </ScrollView>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  updateSearch = (search) => {\r\n    // this.setState({ search: search.trim() });\r\n    // if (search) {\r\n    // } else {\r\n    //   this.setState({\r\n    //     showSearchView:false,\r\n    //     empty: false,\r\n    //     productsFound: false,\r\n    //     img_empty: false,\r\n    //     refreshing: false,\r\n    //     spinner:false\r\n    //   });\r\n    // }\r\n  }\r\n\r\n  clearSearch() {\r\n    // this.setState({\r\n    //   showSearchView:false,\r\n    //   empty: false,\r\n    //   productsFound: false,\r\n    //   spinner: false,\r\n    //   img_empty: false,\r\n    //   refreshing: false\r\n    // });\r\n  }\r\n\r\n  SearchAboutProducts(searchText) {\r\n    // if (searchText.trim() != null && searchText.trim() != \"\") {\r\n    //     this.setState({\r\n    //         showSearchView:true,\r\n    //         activities: [],\r\n    //         spinner: true,\r\n    //         img_empty: false,\r\n    //         refreshing: false,\r\n    //         search:searchText\r\n    //     });\r\n    //     this.props.searchProduct(searchText).then((response) => {\r\n    //         // console.log(response)\r\n    //         if (response.type == 'FETCH_SEARCH_SUCESS') {\r\n    //         if (response.payload.items.length) {\r\n    //             try {\r\n    //                 let activitiesArray = response.payload.items;\r\n    //                 this.setState({\r\n    //                     spinner: false,\r\n    //                     empty: false,\r\n    //                     activities: activitiesArray,\r\n    //                     img_empty: false,\r\n    //                     refreshing: false,\r\n    //                     selectIndex:null\r\n    //                 });\r\n    //             } catch (error) {\r\n    //                 console.log(error.message);\r\n    //             }\r\n    //         } else {\r\n    //             try {\r\n    //                 this.setState({\r\n    //                     empty: true,\r\n    //                     spinner: false,\r\n    //                     img_empty: true,\r\n    //                     refreshing: false,\r\n    //                     selectIndex:null\r\n    //                 });\r\n    //             } catch (error) {\r\n    //                 console.log(error.message);\r\n    //             }\r\n    //         }\r\n    //         } else {\r\n    //         this.setState({\r\n    //             empty: true, img_empty: true, refreshing: false, selectIndex:null\r\n    //         });\r\n    //             alert(i18n.t('loginScreen.server',{locale:this.props.LanguageReducer.langID}));\r\n    //         }\r\n    //     });\r\n    // }\r\n  }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}