{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/satya/Workspace/Callstack/react-navigation-tabs/src/views/BottomTabBar.tsx\";\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from 'react-native-safe-area-view';\nimport { ThemeColors, ThemeContext } from 'react-navigation';\nimport CrossFadeIcon from \"./CrossFadeIcon\";\nimport withDimensions from \"../utils/withDimensions\";\nvar majorVersion = parseInt(Platform.Version, 10);\nvar isIos = Platform.OS === 'ios';\nvar isIOS11 = majorVersion >= 11 && isIos;\nvar DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nvar TouchableWithoutFeedbackWrapper = function (_React$Component) {\n  _inherits(TouchableWithoutFeedbackWrapper, _React$Component);\n\n  function TouchableWithoutFeedbackWrapper() {\n    _classCallCheck(this, TouchableWithoutFeedbackWrapper);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TouchableWithoutFeedbackWrapper).apply(this, arguments));\n  }\n\n  _createClass(TouchableWithoutFeedbackWrapper, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          route = _this$props.route,\n          focused = _this$props.focused,\n          onPress = _this$props.onPress,\n          onLongPress = _this$props.onLongPress,\n          testID = _this$props.testID,\n          accessibilityLabel = _this$props.accessibilityLabel,\n          accessibilityRole = _this$props.accessibilityRole,\n          accessibilityStates = _this$props.accessibilityStates,\n          rest = _objectWithoutProperties(_this$props, [\"route\", \"focused\", \"onPress\", \"onLongPress\", \"testID\", \"accessibilityLabel\", \"accessibilityRole\", \"accessibilityStates\"]);\n\n      return React.createElement(TouchableWithoutFeedback, {\n        onPress: onPress,\n        onLongPress: onLongPress,\n        testID: testID,\n        hitSlop: {\n          left: 15,\n          right: 15,\n          top: 0,\n          bottom: 5\n        },\n        accessibilityLabel: accessibilityLabel,\n        accessibilityRole: accessibilityRole,\n        accessibilityStates: accessibilityStates,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        }\n      }, React.createElement(View, _extends({}, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        }\n      })));\n    }\n  }]);\n\n  return TouchableWithoutFeedbackWrapper;\n}(React.Component);\n\nvar TabBarBottom = function (_React$Component2) {\n  _inherits(TabBarBottom, _React$Component2);\n\n  function TabBarBottom() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TabBarBottom);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TabBarBottom)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      layout: {\n        height: 0,\n        width: 0\n      },\n      keyboard: false,\n      visible: new Animated.Value(1)\n    };\n\n    _this._handleKeyboardShow = function () {\n      return _this.setState({\n        keyboard: true\n      }, function () {\n        return Animated.timing(_this.state.visible, {\n          toValue: 0,\n          duration: 150,\n          useNativeDriver: true\n        }).start();\n      });\n    };\n\n    _this._handleKeyboardHide = function () {\n      return Animated.timing(_this.state.visible, {\n        toValue: 1,\n        duration: 100,\n        useNativeDriver: true\n      }).start(function () {\n        _this.setState({\n          keyboard: false\n        });\n      });\n    };\n\n    _this._handleLayout = function (e) {\n      var layout = _this.state.layout;\n      var _e$nativeEvent$layout = e.nativeEvent.layout,\n          height = _e$nativeEvent$layout.height,\n          width = _e$nativeEvent$layout.width;\n\n      if (height === layout.height && width === layout.width) {\n        return;\n      }\n\n      _this.setState({\n        layout: {\n          height: height,\n          width: width\n        }\n      });\n    };\n\n    _this._getActiveTintColor = function () {\n      var activeTintColor = _this.props.activeTintColor;\n\n      if (!activeTintColor) {\n        return;\n      } else if (typeof activeTintColor === 'string') {\n        return activeTintColor;\n      }\n\n      return activeTintColor[_this.context];\n    };\n\n    _this._getInactiveTintColor = function () {\n      var inactiveTintColor = _this.props.inactiveTintColor;\n\n      if (!inactiveTintColor) {\n        return;\n      } else if (typeof inactiveTintColor === 'string') {\n        return inactiveTintColor;\n      }\n\n      return inactiveTintColor[_this.context];\n    };\n\n    _this._getActiveBackgroundColor = function () {\n      var activeBackgroundColor = _this.props.activeBackgroundColor;\n\n      if (!activeBackgroundColor) {\n        return;\n      } else if (typeof activeBackgroundColor === 'string') {\n        return activeBackgroundColor;\n      }\n\n      return activeBackgroundColor[_this.context];\n    };\n\n    _this._getInactiveBackgroundColor = function () {\n      var inactiveBackgroundColor = _this.props.inactiveBackgroundColor;\n\n      if (!inactiveBackgroundColor) {\n        return;\n      } else if (typeof inactiveBackgroundColor === 'string') {\n        return inactiveBackgroundColor;\n      }\n\n      return inactiveBackgroundColor[_this.context];\n    };\n\n    _this._renderLabel = function (_ref) {\n      var route = _ref.route,\n          focused = _ref.focused;\n      var _this$props2 = _this.props,\n          labelStyle = _this$props2.labelStyle,\n          showLabel = _this$props2.showLabel,\n          showIcon = _this$props2.showIcon,\n          allowFontScaling = _this$props2.allowFontScaling;\n\n      if (showLabel === false) {\n        return null;\n      }\n\n      var activeTintColor = _this._getActiveTintColor();\n\n      var inactiveTintColor = _this._getInactiveTintColor();\n\n      var label = _this.props.getLabelText({\n        route: route\n      });\n\n      var tintColor = focused ? activeTintColor : inactiveTintColor;\n\n      var horizontal = _this._shouldUseHorizontalLabels();\n\n      if (typeof label === 'string') {\n        return React.createElement(Animated.Text, {\n          numberOfLines: 1,\n          style: [styles.label, {\n            color: tintColor\n          }, showIcon && horizontal ? styles.labelBeside : styles.labelBeneath, labelStyle],\n          allowFontScaling: allowFontScaling,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          }\n        }, label);\n      }\n\n      if (typeof label === 'function') {\n        return label({\n          focused: focused,\n          tintColor: tintColor,\n          orientation: horizontal ? 'horizontal' : 'vertical'\n        });\n      }\n\n      return label;\n    };\n\n    _this._renderIcon = function (_ref2) {\n      var route = _ref2.route,\n          focused = _ref2.focused;\n      var _this$props3 = _this.props,\n          renderIcon = _this$props3.renderIcon,\n          showIcon = _this$props3.showIcon,\n          showLabel = _this$props3.showLabel;\n\n      if (showIcon === false) {\n        return null;\n      }\n\n      var horizontal = _this._shouldUseHorizontalLabels();\n\n      var activeTintColor = _this._getActiveTintColor();\n\n      var inactiveTintColor = _this._getInactiveTintColor();\n\n      var activeOpacity = focused ? 1 : 0;\n      var inactiveOpacity = focused ? 0 : 1;\n      return React.createElement(CrossFadeIcon, {\n        route: route,\n        horizontal: horizontal,\n        activeOpacity: activeOpacity,\n        inactiveOpacity: inactiveOpacity,\n        activeTintColor: activeTintColor,\n        inactiveTintColor: inactiveTintColor,\n        renderIcon: renderIcon,\n        style: [styles.iconWithExplicitHeight, showLabel === false && !horizontal && styles.iconWithoutLabel, showLabel !== false && !horizontal && styles.iconWithLabel],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        }\n      });\n    };\n\n    _this._shouldUseHorizontalLabels = function () {\n      var routes = _this.props.navigation.state.routes;\n      var _this$props4 = _this.props,\n          isLandscape = _this$props4.isLandscape,\n          dimensions = _this$props4.dimensions,\n          adaptive = _this$props4.adaptive,\n          tabStyle = _this$props4.tabStyle,\n          labelPosition = _this$props4.labelPosition;\n\n      if (labelPosition) {\n        var position;\n\n        if (typeof labelPosition === 'string') {\n          position = labelPosition;\n        } else {\n          position = labelPosition({\n            deviceOrientation: isLandscape ? 'horizontal' : 'vertical'\n          });\n        }\n\n        if (position) {\n          return position === 'beside-icon';\n        }\n      }\n\n      if (!adaptive) {\n        return false;\n      }\n\n      if (Platform.isPad) {\n        var maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n        var flattenedStyle = StyleSheet.flatten(tabStyle);\n\n        if (flattenedStyle) {\n          if (typeof flattenedStyle.width === 'number') {\n            maxTabItemWidth = flattenedStyle.width;\n          } else if (typeof flattenedStyle.maxWidth === 'number') {\n            maxTabItemWidth = flattenedStyle.maxWidth;\n          }\n        }\n\n        return routes.length * maxTabItemWidth <= dimensions.width;\n      } else {\n        return isLandscape;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(TabBarBottom, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (Platform.OS === 'ios') {\n        Keyboard.addListener('keyboardWillShow', this._handleKeyboardShow);\n        Keyboard.addListener('keyboardWillHide', this._handleKeyboardHide);\n      } else {\n        Keyboard.addListener('keyboardDidShow', this._handleKeyboardShow);\n        Keyboard.addListener('keyboardDidHide', this._handleKeyboardHide);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (Platform.OS === 'ios') {\n        Keyboard.removeListener('keyboardWillShow', this._handleKeyboardShow);\n        Keyboard.removeListener('keyboardWillHide', this._handleKeyboardHide);\n      } else {\n        Keyboard.removeListener('keyboardDidShow', this._handleKeyboardShow);\n        Keyboard.removeListener('keyboardDidHide', this._handleKeyboardHide);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          navigation = _this$props5.navigation,\n          keyboardHidesTabBar = _this$props5.keyboardHidesTabBar,\n          onTabPress = _this$props5.onTabPress,\n          onTabLongPress = _this$props5.onTabLongPress,\n          safeAreaInset = _this$props5.safeAreaInset,\n          style = _this$props5.style,\n          tabStyle = _this$props5.tabStyle;\n      var routes = navigation.state.routes;\n      var isDark = this.context === 'dark';\n\n      var activeBackgroundColor = this._getActiveBackgroundColor();\n\n      var inactiveBackgroundColor = this._getInactiveBackgroundColor();\n\n      var tabBarStyle = [styles.tabBar, isDark ? styles.tabBarDark : styles.tabBarLight, this._shouldUseHorizontalLabels() && !Platform.isPad ? styles.tabBarCompact : styles.tabBarRegular, style];\n      return React.createElement(Animated.View, {\n        style: [styles.container, keyboardHidesTabBar ? {\n          transform: [{\n            translateY: this.state.visible.interpolate({\n              inputRange: [0, 1],\n              outputRange: [this.state.layout.height, 0]\n            })\n          }],\n          position: this.state.keyboard ? 'absolute' : null\n        } : null],\n        pointerEvents: keyboardHidesTabBar && this.state.keyboard ? 'none' : 'auto',\n        onLayout: this._handleLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        }\n      }, React.createElement(SafeAreaView, {\n        style: tabBarStyle,\n        forceInset: safeAreaInset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        }\n      }, routes.map(function (route, index) {\n        var focused = index === navigation.state.index;\n        var scene = {\n          route: route,\n          focused: focused\n        };\n\n        var accessibilityLabel = _this2.props.getAccessibilityLabel({\n          route: route\n        });\n\n        var accessibilityRole = _this2.props.getAccessibilityRole({\n          route: route\n        });\n\n        var accessibilityStates = _this2.props.getAccessibilityStates(scene);\n\n        var testID = _this2.props.getTestID({\n          route: route\n        });\n\n        var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n        var ButtonComponent = _this2.props.getButtonComponent({\n          route: route\n        }) || TouchableWithoutFeedbackWrapper;\n        return React.createElement(ButtonComponent, {\n          key: route.key,\n          route: route,\n          focused: focused,\n          onPress: function onPress() {\n            return onTabPress({\n              route: route\n            });\n          },\n          onLongPress: function onLongPress() {\n            return onTabLongPress({\n              route: route\n            });\n          },\n          testID: testID,\n          accessibilityLabel: accessibilityLabel,\n          accessibilityRole: accessibilityRole,\n          accessibilityStates: accessibilityStates,\n          style: [styles.tab, {\n            backgroundColor: backgroundColor\n          }, _this2._shouldUseHorizontalLabels() ? styles.tabLandscape : styles.tabPortrait, tabStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410\n          }\n        }, _this2._renderIcon(scene), _this2._renderLabel(scene));\n      })));\n    }\n  }]);\n\n  return TabBarBottom;\n}(React.Component);\n\nTabBarBottom.defaultProps = {\n  keyboardHidesTabBar: true,\n  activeTintColor: {\n    light: '#007AFF',\n    dark: '#fff'\n  },\n  inactiveTintColor: {\n    light: '#8e8e93',\n    dark: '#7f7f7f'\n  },\n  activeBackgroundColor: 'transparent',\n  inactiveBackgroundColor: 'transparent',\n  showLabel: true,\n  showIcon: true,\n  allowFontScaling: true,\n  adaptive: isIOS11,\n  safeAreaInset: {\n    bottom: 'always',\n    top: 'never'\n  }\n};\nTabBarBottom.contextType = ThemeContext;\nvar DEFAULT_HEIGHT = 49;\nvar COMPACT_HEIGHT = 29;\nvar styles = StyleSheet.create({\n  tabBar: {\n    borderTopWidth: StyleSheet.hairlineWidth,\n    flexDirection: 'row'\n  },\n  tabBarLight: {\n    backgroundColor: ThemeColors.light.header,\n    borderTopColor: ThemeColors.light.headerBorder\n  },\n  tabBarDark: {\n    backgroundColor: ThemeColors.dark.header,\n    borderTopColor: ThemeColors.dark.headerBorder\n  },\n  container: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    elevation: 8\n  },\n  tabBarCompact: {\n    height: COMPACT_HEIGHT\n  },\n  tabBarRegular: {\n    height: DEFAULT_HEIGHT\n  },\n  tab: {\n    flex: 1,\n    alignItems: isIos ? 'center' : 'stretch'\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column'\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  iconWithoutLabel: {\n    flex: 1\n  },\n  iconWithLabel: {\n    flex: 1\n  },\n  iconWithExplicitHeight: {\n    height: Platform.isPad ? DEFAULT_HEIGHT : COMPACT_HEIGHT\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  },\n  labelBeneath: {\n    fontSize: 11,\n    marginBottom: 1.5\n  },\n  labelBeside: {\n    fontSize: 12,\n    marginLeft: 20\n  }\n});\nexport default withDimensions(TabBarBottom);","map":{"version":3,"sources":["BottomTabBar.tsx"],"names":["majorVersion","parseInt","Platform","isIos","isIOS11","DEFAULT_MAX_TAB_ITEM_WIDTH","TouchableWithoutFeedbackWrapper","React","Component","route","focused","onPress","onLongPress","testID","accessibilityLabel","accessibilityRole","accessibilityStates","rest","left","right","top","bottom","TabBarBottom","defaultProps","keyboardHidesTabBar","activeTintColor","light","dark","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","showLabel","showIcon","allowFontScaling","adaptive","safeAreaInset","contextType","ThemeContext","state","layout","height","width","keyboard","visible","Animated","Keyboard","_handleKeyboardShow","toValue","duration","useNativeDriver","_handleKeyboardHide","_handleLayout","e","_getActiveTintColor","_getInactiveTintColor","_getActiveBackgroundColor","_getInactiveBackgroundColor","_renderLabel","labelStyle","label","tintColor","horizontal","styles","color","orientation","_renderIcon","renderIcon","activeOpacity","inactiveOpacity","_shouldUseHorizontalLabels","routes","isLandscape","dimensions","tabStyle","labelPosition","position","deviceOrientation","maxTabItemWidth","flattenedStyle","StyleSheet","navigation","onTabPress","onTabLongPress","style","isDark","tabBarStyle","transform","translateY","inputRange","outputRange","index","scene","backgroundColor","ButtonComponent","DEFAULT_HEIGHT","COMPACT_HEIGHT","tabBar","borderTopWidth","flexDirection","tabBarLight","ThemeColors","borderTopColor","tabBarDark","container","elevation","tabBarCompact","tabBarRegular","tab","flex","alignItems","tabPortrait","justifyContent","tabLandscape","iconWithoutLabel","iconWithLabel","iconWithExplicitHeight","textAlign","labelBeneath","fontSize","marginBottom","labelBeside","marginLeft","withDimensions"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Animated,\n  TouchableWithoutFeedback,\n  StyleSheet,\n  View,\n  Keyboard,\n  Platform,\n  LayoutChangeEvent,\n} from 'react-native';\nimport SafeAreaView from 'react-native-safe-area-view';\nimport { ThemeColors, ThemeContext, NavigationRoute } from 'react-navigation';\n\nimport CrossFadeIcon from './CrossFadeIcon';\nimport withDimensions from '../utils/withDimensions';\nimport { BottomTabBarProps, ButtonComponentProps } from '../types';\n\ntype State = {\n  layout: { height: number; width: number };\n  keyboard: boolean;\n  visible: Animated.Value;\n};\n\nconst majorVersion = parseInt(Platform.Version as string, 10);\nconst isIos = Platform.OS === 'ios';\nconst isIOS11 = majorVersion >= 11 && isIos;\n\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nclass TouchableWithoutFeedbackWrapper extends React.Component<\n  ButtonComponentProps\n> {\n  render() {\n    const {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      route,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      focused,\n      onPress,\n      onLongPress,\n      testID,\n      accessibilityLabel,\n      accessibilityRole,\n      accessibilityStates,\n      ...rest\n    } = this.props;\n\n    return (\n      <TouchableWithoutFeedback\n        onPress={onPress}\n        onLongPress={onLongPress}\n        testID={testID}\n        hitSlop={{ left: 15, right: 15, top: 0, bottom: 5 }}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityRole={accessibilityRole}\n        accessibilityStates={accessibilityStates}\n      >\n        <View {...rest} />\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nclass TabBarBottom extends React.Component<BottomTabBarProps, State> {\n  static defaultProps = {\n    keyboardHidesTabBar: true,\n    activeTintColor: {\n      light: '#007AFF',\n      dark: '#fff',\n    },\n    inactiveTintColor: {\n      light: '#8e8e93',\n      dark: '#7f7f7f',\n    },\n    activeBackgroundColor: 'transparent',\n    inactiveBackgroundColor: 'transparent',\n    showLabel: true,\n    showIcon: true,\n    allowFontScaling: true,\n    adaptive: isIOS11,\n    safeAreaInset: { bottom: 'always', top: 'never' } as React.ComponentProps<\n      typeof SafeAreaView\n    >['forceInset'],\n  };\n\n  static contextType = ThemeContext;\n\n  state = {\n    layout: { height: 0, width: 0 },\n    keyboard: false,\n    visible: new Animated.Value(1),\n  };\n\n  componentDidMount() {\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', this._handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', this._handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', this._handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', this._handleKeyboardHide);\n    }\n  }\n\n  componentWillUnmount() {\n    if (Platform.OS === 'ios') {\n      Keyboard.removeListener('keyboardWillShow', this._handleKeyboardShow);\n      Keyboard.removeListener('keyboardWillHide', this._handleKeyboardHide);\n    } else {\n      Keyboard.removeListener('keyboardDidShow', this._handleKeyboardShow);\n      Keyboard.removeListener('keyboardDidHide', this._handleKeyboardHide);\n    }\n  }\n\n  // @ts-ignore\n  context: 'light' | 'dark';\n\n  _handleKeyboardShow = () =>\n    this.setState({ keyboard: true }, () =>\n      Animated.timing(this.state.visible, {\n        toValue: 0,\n        duration: 150,\n        useNativeDriver: true,\n      }).start()\n    );\n\n  _handleKeyboardHide = () =>\n    Animated.timing(this.state.visible, {\n      toValue: 1,\n      duration: 100,\n      useNativeDriver: true,\n    }).start(() => {\n      this.setState({ keyboard: false });\n    });\n\n  _handleLayout = (e: LayoutChangeEvent) => {\n    const { layout } = this.state;\n    const { height, width } = e.nativeEvent.layout;\n\n    if (height === layout.height && width === layout.width) {\n      return;\n    }\n\n    this.setState({\n      layout: {\n        height,\n        width,\n      },\n    });\n  };\n\n  _getActiveTintColor = () => {\n    let { activeTintColor } = this.props;\n    if (!activeTintColor) {\n      return;\n    } else if (typeof activeTintColor === 'string') {\n      return activeTintColor;\n    }\n\n    return activeTintColor[this.context];\n  };\n\n  _getInactiveTintColor = () => {\n    let { inactiveTintColor } = this.props;\n    if (!inactiveTintColor) {\n      return;\n    } else if (typeof inactiveTintColor === 'string') {\n      return inactiveTintColor;\n    }\n\n    return inactiveTintColor[this.context];\n  };\n\n  _getActiveBackgroundColor = () => {\n    let { activeBackgroundColor } = this.props;\n    if (!activeBackgroundColor) {\n      return;\n    } else if (typeof activeBackgroundColor === 'string') {\n      return activeBackgroundColor;\n    }\n\n    return activeBackgroundColor[this.context];\n  };\n\n  _getInactiveBackgroundColor = () => {\n    let { inactiveBackgroundColor } = this.props;\n    if (!inactiveBackgroundColor) {\n      return;\n    } else if (typeof inactiveBackgroundColor === 'string') {\n      return inactiveBackgroundColor;\n    }\n\n    return inactiveBackgroundColor[this.context];\n  };\n\n  _renderLabel = ({\n    route,\n    focused,\n  }: {\n    route: NavigationRoute;\n    focused: boolean;\n  }) => {\n    const { labelStyle, showLabel, showIcon, allowFontScaling } = this.props;\n\n    if (showLabel === false) {\n      return null;\n    }\n\n    const activeTintColor = this._getActiveTintColor();\n    const inactiveTintColor = this._getInactiveTintColor();\n    const label = this.props.getLabelText({ route });\n    const tintColor = focused ? activeTintColor : inactiveTintColor;\n    const horizontal = this._shouldUseHorizontalLabels();\n\n    if (typeof label === 'string') {\n      return (\n        <Animated.Text\n          numberOfLines={1}\n          style={[\n            styles.label,\n            { color: tintColor },\n            showIcon && horizontal ? styles.labelBeside : styles.labelBeneath,\n            labelStyle,\n          ]}\n          allowFontScaling={allowFontScaling}\n        >\n          {label}\n        </Animated.Text>\n      );\n    }\n\n    if (typeof label === 'function') {\n      return label({\n        focused,\n        tintColor,\n        orientation: horizontal ? 'horizontal' : 'vertical',\n      });\n    }\n\n    return label;\n  };\n\n  _renderIcon = ({\n    route,\n    focused,\n  }: {\n    route: NavigationRoute;\n    focused: boolean;\n  }) => {\n    const { renderIcon, showIcon, showLabel } = this.props;\n\n    if (showIcon === false) {\n      return null;\n    }\n\n    const horizontal = this._shouldUseHorizontalLabels();\n\n    const activeTintColor = this._getActiveTintColor();\n    const inactiveTintColor = this._getInactiveTintColor();\n    const activeOpacity = focused ? 1 : 0;\n    const inactiveOpacity = focused ? 0 : 1;\n\n    return (\n      <CrossFadeIcon\n        route={route}\n        horizontal={horizontal}\n        activeOpacity={activeOpacity}\n        inactiveOpacity={inactiveOpacity}\n        activeTintColor={activeTintColor}\n        inactiveTintColor={inactiveTintColor}\n        renderIcon={renderIcon}\n        style={[\n          styles.iconWithExplicitHeight,\n          showLabel === false && !horizontal && styles.iconWithoutLabel,\n          showLabel !== false && !horizontal && styles.iconWithLabel,\n        ]}\n      />\n    );\n  };\n\n  _shouldUseHorizontalLabels = () => {\n    const { routes } = this.props.navigation.state;\n    const {\n      isLandscape,\n      dimensions,\n      adaptive,\n      tabStyle,\n      labelPosition,\n    } = this.props;\n\n    if (labelPosition) {\n      let position;\n      if (typeof labelPosition === 'string') {\n        position = labelPosition;\n      } else {\n        position = labelPosition({\n          deviceOrientation: isLandscape ? 'horizontal' : 'vertical',\n        });\n      }\n\n      if (position) {\n        return position === 'beside-icon';\n      }\n    }\n\n    if (!adaptive) {\n      return false;\n    }\n\n    // @ts-ignore\n    if (Platform.isPad) {\n      let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n      const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          maxTabItemWidth = flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          maxTabItemWidth = flattenedStyle.maxWidth;\n        }\n      }\n\n      return routes.length * maxTabItemWidth <= dimensions.width;\n    } else {\n      return isLandscape;\n    }\n  };\n\n  render() {\n    const {\n      navigation,\n      keyboardHidesTabBar,\n      onTabPress,\n      onTabLongPress,\n      safeAreaInset,\n      style,\n      tabStyle,\n    } = this.props;\n\n    const { routes } = navigation.state;\n    const isDark = this.context === 'dark';\n\n    const activeBackgroundColor = this._getActiveBackgroundColor();\n    const inactiveBackgroundColor = this._getInactiveBackgroundColor();\n\n    const tabBarStyle = [\n      styles.tabBar,\n      isDark ? styles.tabBarDark : styles.tabBarLight,\n      // @ts-ignore\n      this._shouldUseHorizontalLabels() && !Platform.isPad\n        ? styles.tabBarCompact\n        : styles.tabBarRegular,\n      style,\n    ];\n\n    return (\n      <Animated.View\n        style={[\n          styles.container,\n          keyboardHidesTabBar\n            ? // eslint-disable-next-line react-native/no-inline-styles\n              {\n                // When the keyboard is shown, slide down the tab bar\n                transform: [\n                  {\n                    translateY: this.state.visible.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [this.state.layout.height, 0],\n                    }),\n                  },\n                ],\n                // Absolutely position the tab bar so that the content is below it\n                // This is needed to avoid gap at bottom when the tab bar is hidden\n                position: this.state.keyboard ? 'absolute' : null,\n              }\n            : null,\n        ]}\n        pointerEvents={\n          keyboardHidesTabBar && this.state.keyboard ? 'none' : 'auto'\n        }\n        onLayout={this._handleLayout}\n      >\n        <SafeAreaView style={tabBarStyle} forceInset={safeAreaInset}>\n          {routes.map((route, index) => {\n            const focused = index === navigation.state.index;\n            const scene = { route, focused };\n            const accessibilityLabel = this.props.getAccessibilityLabel({\n              route,\n            });\n\n            const accessibilityRole = this.props.getAccessibilityRole({\n              route,\n            });\n\n            const accessibilityStates = this.props.getAccessibilityStates(\n              scene\n            );\n\n            const testID = this.props.getTestID({ route });\n\n            const backgroundColor = focused\n              ? activeBackgroundColor\n              : inactiveBackgroundColor;\n\n            const ButtonComponent =\n              this.props.getButtonComponent({ route }) ||\n              TouchableWithoutFeedbackWrapper;\n\n            return (\n              <ButtonComponent\n                key={route.key}\n                route={route}\n                focused={focused}\n                onPress={() => onTabPress({ route })}\n                onLongPress={() => onTabLongPress({ route })}\n                testID={testID}\n                accessibilityLabel={accessibilityLabel}\n                accessibilityRole={accessibilityRole}\n                accessibilityStates={accessibilityStates}\n                style={[\n                  styles.tab,\n                  { backgroundColor },\n                  this._shouldUseHorizontalLabels()\n                    ? styles.tabLandscape\n                    : styles.tabPortrait,\n                  tabStyle,\n                ]}\n              >\n                {this._renderIcon(scene)}\n                {this._renderLabel(scene)}\n              </ButtonComponent>\n            );\n          })}\n        </SafeAreaView>\n      </Animated.View>\n    );\n  }\n}\n\nconst DEFAULT_HEIGHT = 49;\nconst COMPACT_HEIGHT = 29;\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    borderTopWidth: StyleSheet.hairlineWidth,\n    flexDirection: 'row',\n  },\n  tabBarLight: {\n    backgroundColor: ThemeColors.light.header,\n    borderTopColor: ThemeColors.light.headerBorder,\n  },\n  tabBarDark: {\n    backgroundColor: ThemeColors.dark.header,\n    borderTopColor: ThemeColors.dark.headerBorder,\n  },\n  container: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    elevation: 8,\n  },\n  tabBarCompact: {\n    height: COMPACT_HEIGHT,\n  },\n  tabBarRegular: {\n    height: DEFAULT_HEIGHT,\n  },\n  tab: {\n    flex: 1,\n    alignItems: isIos ? 'center' : 'stretch',\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column',\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  iconWithoutLabel: {\n    flex: 1,\n  },\n  iconWithLabel: {\n    flex: 1,\n  },\n  iconWithExplicitHeight: {\n    // @ts-ignore\n    height: Platform.isPad ? DEFAULT_HEIGHT : COMPACT_HEIGHT,\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n  },\n  labelBeneath: {\n    fontSize: 11,\n    marginBottom: 1.5,\n  },\n  labelBeside: {\n    fontSize: 12,\n    marginLeft: 20,\n  },\n});\n\nexport default withDimensions(TabBarBottom);\n"]},"metadata":{},"sourceType":"module"}