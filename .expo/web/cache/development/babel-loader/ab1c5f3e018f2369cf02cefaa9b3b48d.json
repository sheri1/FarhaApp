{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\jit\\\\Desktop\\\\finalProject\\\\farhasheri\\\\screens\\\\ForgetPasswordScreen\\\\ForgetPasswordScreen.js\";\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport StyledText from \"../../components/StyledTexts/StyledText\";\nimport StyledTextBold from \"../../components/StyledTexts/StyledTextBold\";\nimport StyledTextLight from \"../../components/StyledTexts/StyledTextLight\";\nimport styles from \"./ForgetPasswordScreenStyle\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\nimport NetInfo from \"@react-native-community/netinfo\";\nimport HeaderBack from \"../../components/HeadersComponent/HeaderBack\";\nimport Firebase from \"../../config/Firebase\";\n\nvar ForgetPasswordScreen = function (_Component) {\n  _inherits(ForgetPasswordScreen, _Component);\n\n  function ForgetPasswordScreen(props) {\n    var _this;\n\n    _classCallCheck(this, ForgetPasswordScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ForgetPasswordScreen).call(this, props));\n\n    _this._handleConnectivityChange = function (isConnected) {\n      _this.setState({\n        isConnected: isConnected\n      });\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      spinner: false,\n      isConnected: null,\n      securePassword: true\n    };\n    return _this;\n  }\n\n  _createClass(ForgetPasswordScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      NetInfo.fetch().then(function (state) {\n        var isConnected = state.isConnected;\n\n        if (isConnected) {\n          _this2.setState({\n            isConnected: true\n          });\n        } else {\n          _this2.setState({\n            isConnected: false\n          });\n        }\n      });\n      NetInfo.isConnected.addEventListener('connectionChange', this._handleConnectivityChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      NetInfo.isConnected.removeEventListener(\"connectionChange\", this._handleConnectivityChange);\n    }\n  }, {\n    key: \"securePasswordMethod\",\n    value: function securePasswordMethod() {\n      this.setState({\n        securePassword: !this.state.securePassword\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(View, {\n        style: styles.containerLinear,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        }\n      }, React.createElement(Spinner, {\n        visible: this.state.spinner,\n        color: \"white\",\n        textContent: \"\",\n        textStyle: {\n          fontSize: 20,\n          fontFamily: \"tahoma\",\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        }\n      }), React.createElement(View, {\n        style: styles.StatusBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        }\n      }, React.createElement(StatusBar, {\n        barStyle: \"light-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        }\n      })), React.createElement(View, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        }\n      }, React.createElement(HeaderBack, {\n        navigation: this.props.navigation,\n        title: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        }\n      })), React.createElement(View, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        }\n      }, React.createElement(ScrollView, {\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        showsVerticalScrollIndicator: false,\n        contentContainerStyle: {\n          flexGrow: 1,\n          paddingHorizontal: 20,\n          justifyContent: 'flex-start',\n          backgroundColor: '#fff',\n          paddingTop: 100\n        },\n        snapToStart: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        }\n      }, React.createElement(View, {\n        style: styles.KeyBoard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        }\n      }, React.createElement(KeyboardAwareScrollView, {\n        keyboardDismissMode: \"on-drag\",\n        enableOnAndroid: true,\n        style: {\n          width: \"100%\",\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        }\n      }, React.createElement(View, {\n        style: styles.logoImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        }\n      }, React.createElement(StyledTextBold, {\n        style: styles.title1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        }\n      }, \"\\u0646\\u0633\\u064A\\u062A \\u0643\\u0644\\u0645\\u0629 \\u0627\\u0644\\u0645\\u0631\\u0648\\u0631\"), React.createElement(StyledText, {\n        style: styles.title2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        }\n      }, \"\\u0627\\u0644\\u0631\\u062C\\u0627\\u0621 \\u0625\\u062F\\u062E\\u0627\\u0644 \\u0628\\u0631\\u064A\\u062F \\u0627\\u0644\\u0643\\u062A\\u0631\\u0648\\u0646\\u064A \\u0641\\u0639\\u0627\\u0644  \\u0644\\u0627\\u0633\\u062A\\u0631\\u062F\\u0627\\u062F \\u062D\\u0633\\u0627\\u0628\\u0643\")), React.createElement(View, {\n        style: {\n          flex: 2,\n          paddingTop: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        }\n      }, React.createElement(View, {\n        style: styles.InputContainer2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        }\n      }, React.createElement(StyledTextBold, {\n        style: styles.InputContainer2Tilte,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        }\n      }, \"\\u0627\\u0644\\u0627\\u064A\\u0645\\u064A\\u0644\"), React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"\\u0623\\u062F\\u062E\\u0644 \\u0627\\u0644\\u0628\\u0631\\u064A\\u062F \\u0627\\u0644\\u0627\\u0644\\u0643\\u062A\\u0631\\u0648\\u0646\\u064A \",\n        placeholderTextColor: \"#A2A2A2\",\n        underlineColorAndroid: \"transparent\",\n        value: this.state.email,\n        returnKeyType: \"done\",\n        onChangeText: function onChangeText(email) {\n          return _this3.setState({\n            email: email\n          });\n        },\n        blurOnSubmit: false,\n        keyboardType: \"email-address\",\n        onSubmitEditing: function onSubmitEditing() {\n          return _this3.forget();\n        },\n        style: styles.Input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        }\n      }))))), React.createElement(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center',\n          position: 'relative',\n          bottom: 100,\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        }\n      }, React.createElement(TouchableOpacity, {\n        activeOpacity: 0.5,\n        style: styles.LoginTouch,\n        onPress: function onPress() {\n          return _this3.forget();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        }\n      }, React.createElement(StyledText, {\n        style: {\n          color: '#fff',\n          fontSize: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        }\n      }, \"\\u0646\\u0633\\u064A\\u062A \\u0643\\u0644\\u0645\\u0629 \\u0627\\u0644\\u0645\\u0631\\u0648\\u0631\")))))))));\n    }\n  }, {\n    key: \"forget\",\n    value: function forget() {\n      var emailAddress = this.state.email;\n      Firebase.auth.sendPasswordResetEmail(emailAddress).then(function () {\n        alert('Email sent Successfuly');\n      }).catch(function (error) {\n        alert('error');\n      });\n    }\n  }]);\n\n  return ForgetPasswordScreen;\n}(Component);\n\nexport { ForgetPasswordScreen as default };","map":{"version":3,"sources":["C:/Users/jit/Desktop/finalProject/farhasheri/screens/ForgetPasswordScreen/ForgetPasswordScreen.js"],"names":["React","Component","KeyboardAwareScrollView","StyledText","StyledTextBold","StyledTextLight","styles","Ionicons","Spinner","NetInfo","HeaderBack","Firebase","ForgetPasswordScreen","props","_handleConnectivityChange","isConnected","setState","state","email","password","spinner","securePassword","fetch","then","addEventListener","removeEventListener","containerLinear","fontSize","fontFamily","color","StatusBar","width","navigation","height","flexGrow","paddingHorizontal","justifyContent","backgroundColor","paddingTop","flex","KeyBoard","logoImage","title1","title2","InputContainer2","InputContainer2Tilte","flexDirection","forget","Input","alignItems","position","bottom","LoginTouch","emailAddress","auth","sendPasswordResetEmail","alert","catch","error"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from \"react\";\r\nimport { View, TouchableOpacity, ScrollView, TextInput, AsyncStorage, Alert,Image,StatusBar } from \"react-native\";\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\nimport StyledText from \"../../components/StyledTexts/StyledText\";\r\nimport StyledTextBold from \"../../components/StyledTexts/StyledTextBold\";\r\nimport StyledTextLight from \"../../components/StyledTexts/StyledTextLight\";\r\nimport styles from \"./ForgetPasswordScreenStyle\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport Spinner from \"react-native-loading-spinner-overlay\";\r\nimport NetInfo from \"@react-native-community/netinfo\";\r\nimport HeaderBack from '../../components/HeadersComponent/HeaderBack'\r\nimport Firebase from '../../config/Firebase'\r\n\r\nexport default class ForgetPasswordScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        spinner: false,\r\n        isConnected: null,\r\n        securePassword:true,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        NetInfo.fetch().then(state => {\r\n        let isConnected = state.isConnected;\r\n        if(isConnected){\r\n            this.setState({ isConnected:true });\r\n        }\r\n        else{\r\n            this.setState({ isConnected: false });\r\n        }\r\n        })\r\n        NetInfo.isConnected.addEventListener('connectionChange', this._handleConnectivityChange);\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        NetInfo.isConnected.removeEventListener(\r\n        \"connectionChange\",\r\n        this._handleConnectivityChange\r\n        );\r\n    }\r\n\r\n    _handleConnectivityChange = (isConnected) => {\r\n        this.setState({ isConnected });\r\n    };\r\n\r\n    securePasswordMethod(){\r\n        this.setState({\r\n        securePassword: !this.state.securePassword\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <>\r\n            <View style={styles.containerLinear}>\r\n            <Spinner\r\n                visible={this.state.spinner} color=\"white\" textContent={\"\"}\r\n                textStyle={{ fontSize: 20, fontFamily: \"tahoma\", color: \"white\" }}\r\n            />\r\n            <View style={styles.StatusBar}>\r\n                <StatusBar barStyle=\"light-content\"/>\r\n            </View>\r\n            <View style={{width:'100%'}}>\r\n                <HeaderBack navigation={this.props.navigation} title=''></HeaderBack>\r\n            </View>\r\n            <View style={{ width: '100%' }}>\r\n                <ScrollView\r\n                style={{ width: '100%',height:'100%' }}\r\n                showsVerticalScrollIndicator={false}\r\n                contentContainerStyle={{flexGrow: 1,paddingHorizontal:20,justifyContent: 'flex-start',backgroundColor:'#fff',paddingTop:100}}\r\n                snapToStart={true}\r\n                >\r\n                <View style={{ flex: 1 }}>\r\n                    <View style={styles.KeyBoard}>\r\n                    <KeyboardAwareScrollView\r\n                        keyboardDismissMode=\"on-drag\" //work only on ios\r\n                        enableOnAndroid={true}\r\n                        style={{width:\"100%\",height:'100%'}}\r\n                    >\r\n                        <View style={styles.logoImage}>\r\n                            <StyledTextBold style={styles.title1}>نسيت كلمة المرور</StyledTextBold>\r\n                            <StyledText style={styles.title2}>الرجاء إدخال بريد الكتروني فعال  لاسترداد حسابك</StyledText>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 2, paddingTop: 40 }}>\r\n                        <View style={styles.InputContainer2}>\r\n                            <StyledTextBold style={styles.InputContainer2Tilte}>الايميل</StyledTextBold>\r\n                            <View style={{ flexDirection: 'row' }}>\r\n                            <TextInput\r\n                                placeholder=\"أدخل البريد الالكتروني \"\r\n                                placeholderTextColor=\"#A2A2A2\"\r\n                                underlineColorAndroid=\"transparent\"\r\n                                value={this.state.email}\r\n                                returnKeyType={\"done\"}\r\n                                onChangeText={(email) => this.setState({ email })}\r\n                                blurOnSubmit={false}\r\n                                keyboardType=\"email-address\"\r\n                                onSubmitEditing={() => this.forget()}\r\n                                style={styles.Input}\r\n                            />\r\n                            </View>\r\n                        </View>\r\n                        \r\n                        </View>\r\n\r\n                        \r\n                    </KeyboardAwareScrollView>\r\n\r\n                    <View style={{justifyContent:'center',alignItems:'center',position:'relative',bottom:100,width:'100%'}}>\r\n                        <TouchableOpacity activeOpacity={0.5} style={styles.LoginTouch}\r\n                        onPress={() => this.forget()}\r\n                        >\r\n                            <StyledText style={{color:'#fff',fontSize:15}}>\r\n                                نسيت كلمة المرور\r\n                            </StyledText>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n                    </View>\r\n                </View>\r\n                </ScrollView>\r\n            </View>\r\n            </View>\r\n        </>\r\n        );\r\n    }\r\n\r\n    forget(){\r\n       // this.props.navigation.navigate('LoginScreen')\r\n        var emailAddress = this.state.email;\r\n        Firebase.auth.sendPasswordResetEmail(emailAddress).then(function() {\r\n        // Email sent.\r\n        alert('Email sent Successfuly');\r\n        }).catch(function(error) {\r\n        alert('error')\r\n         });\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}