{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\jit\\\\Desktop\\\\farhasheri\\\\screens\\\\RegisterScreen\\\\RegisterScreen.js\";\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport StyledText from \"../../components/StyledTexts/StyledText\";\nimport StyledTextBold from \"../../components/StyledTexts/StyledTextBold\";\nimport StyledTextLight from \"../../components/StyledTexts/StyledTextLight\";\nimport styles from \"./RegisterScreenStyle\";\nimport { Ionicons, AntDesign } from \"@expo/vector-icons\";\nimport Dialog, { DialogContent } from \"react-native-popup-dialog\";\nimport NetInfo from \"@react-native-community/netinfo\";\nimport HeaderBack from \"../../components/HeadersComponent/HeaderBack\";\nimport { withFirebaseHOC } from \"../../config/Firebase\";\n\nvar RegisterScreen = function (_Component) {\n  _inherits(RegisterScreen, _Component);\n\n  function RegisterScreen(props) {\n    var _this;\n\n    _classCallCheck(this, RegisterScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegisterScreen).call(this, props));\n\n    _this._handleConnectivityChange = function (isConnected) {\n      _this.setState({\n        isConnected: isConnected\n      });\n    };\n\n    _this.validation = function () {\n      var _this$state = _this.state,\n          displayName = _this$state.displayName,\n          email = _this$state.email,\n          phone = _this$state.phone,\n          password = _this$state.password,\n          password_confirmation = _this$state.password_confirmation;\n      var isValid = true;\n      var errors = {};\n\n      if (!displayName.match(/^[a-zA-Z\\u0600-\\u06FF\\s]+$/) || !displayName) {\n        isValid = false;\n        errors[\"name\"] = \"الاسم يتكون من أحرف عربية أو انجليزية فقط\";\n      }\n\n      if (displayName.length < 3) {\n        validName = false;\n        errors[\"name\"] = \"الاسم الذي أدخلته قصير للغاية\";\n      }\n\n      if (!email.match(/[^\\d][\\w.]+@\\w+(\\.[A-Za-z]+){1,2}/g) || !email) {\n        isValid = false;\n        errors[\"email\"] = \"البريد الالكتروني الذي أدخلته غير صحيح\";\n      }\n\n      if (!phone.match(/[0-9]{10}/) || !phone) {\n        isValid = false;\n        errors[\"phone\"] = \"رقم الهاتف الذي أدخلته غير صحيح\";\n      }\n\n      if (password !== password_confirmation) {\n        isValid = false;\n        errors[\"password\"] = \"كلمتا المرور غير متطابقتان\";\n      }\n\n      _this.setState({\n        errors: errors\n      });\n\n      return isValid;\n    };\n\n    _this.handleOnSignup = function _callee() {\n      var _this$state2, displayName, email, phone, city, password, currentUser, user, uid, userData;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state2 = _this.state, displayName = _this$state2.displayName, email = _this$state2.email, phone = _this$state2.phone, city = _this$state2.city, password = _this$state2.password;\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(_this.props.firebase.signupWithEmail(email, password));\n\n            case 4:\n              currentUser = _context.sent;\n\n              if (!currentUser.user) {\n                _context.next = 11;\n                break;\n              }\n\n              user = currentUser.user;\n              uid = currentUser.user.uid;\n              userData = {\n                email: email,\n                displayName: displayName,\n                phone: phone,\n                city: city,\n                uid: uid\n              };\n              _context.next = 11;\n              return _regeneratorRuntime.awrap(_this.props.firebase.createUserDocument(user, userData));\n\n            case 11:\n              setTimeout(function () {\n                var currentUser = _this.props.firebase.auth.currentUser;\n\n                if (currentUser != null) {\n                  currentUser.sendEmailVerification().then(function () {\n                    alert('يرجى مراجعة بريدك الالكتروني لتأكيد التسجيل');\n                  }).catch(function (error) {\n                    alert('error');\n                  });\n                }\n              }, 3000);\n              _context.next = 19;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](1);\n              alert('email already used');\n              console.log('Something went wrong: ' + _context.t0);\n              throw _context.t0;\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 14]]);\n    };\n\n    _this.state = {\n      spinner: false,\n      location: null,\n      isConnected: null,\n      visible: false,\n      username: \"\",\n      displayName: \"\",\n      password: \"\",\n      password_confirmation: '',\n      email: '',\n      area: '',\n      securePassword: true,\n      securePassword2: true,\n      errors: {},\n      phone: '',\n      city: 'غزة'\n    };\n    return _this;\n  }\n\n  _createClass(RegisterScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      NetInfo.fetch().then(function (state) {\n        var isConnected = state.isConnected;\n\n        if (isConnected) {\n          _this2.setState({\n            isConnected: true\n          });\n        } else {\n          _this2.setState({\n            isConnected: false\n          });\n        }\n      });\n      NetInfo.isConnected.addEventListener('connectionChange', this._handleConnectivityChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      NetInfo.isConnected.removeEventListener(\"connectionChange\", this._handleConnectivityChange);\n    }\n  }, {\n    key: \"securePasswordMethod\",\n    value: function securePasswordMethod() {\n      this.setState({\n        securePassword: !this.state.securePassword\n      });\n    }\n  }, {\n    key: \"securePasswordMethod2\",\n    value: function securePasswordMethod2() {\n      this.setState({\n        securePassword2: !this.state.securePassword2\n      });\n    }\n  }, {\n    key: \"register\",\n    value: function register() {\n      if (this.validation()) {\n        this.handleOnSignup();\n      } else {\n        alert('error');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state3 = this.state,\n          errors = _this$state3.errors,\n          city = _this$state3.city;\n      return React.createElement(React.Fragment, null, React.createElement(View, {\n        style: styles.containerLinear,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        }\n      }, React.createElement(View, {\n        style: styles.StatusBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        }\n      }, React.createElement(StatusBar, {\n        barStyle: \"light-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        }\n      })), React.createElement(View, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        }\n      }, React.createElement(HeaderBack, {\n        navigation: this.props.navigation,\n        title: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        }\n      })), React.createElement(View, {\n        style: {\n          width: '100%',\n          marginTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        }\n      }, React.createElement(ScrollView, {\n        style: {\n          width: '100%'\n        },\n        showsVerticalScrollIndicator: false,\n        contentContainerStyle: {\n          flexGrow: 1,\n          justifyContent: 'flex-start',\n          backgroundColor: '#fff',\n          paddingHorizontal: 20\n        },\n        snapToStart: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        }\n      }, React.createElement(View, {\n        style: styles.KeyBoard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        }\n      }, React.createElement(KeyboardAwareScrollView, {\n        keyboardDismissMode: \"on-drag\",\n        enableOnAndroid: true,\n        style: {\n          width: \"100%\",\n          paddingBottom: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        }\n      }, React.createElement(View, {\n        style: styles.OrCont,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        }\n      }, React.createElement(StyledTextBold, {\n        style: styles.Ortxt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        }\n      }, \"\\u062A\\u0633\\u062C\\u064A\\u0644 \\u062D\\u0633\\u0627\\u0628 \\u062C\\u062F\\u064A\\u062F\")), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        }\n      }, React.createElement(StyledText, {\n        style: styles.Ortxt2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        }\n      }, \"\\u064A\\u0631\\u062C\\u0649 \\u0625\\u062F\\u062E\\u0627\\u0644 \\u062C\\u0645\\u064A\\u0639 \\u0627\\u0644\\u0628\\u064A\\u0627\\u0646\\u0627\\u062A \\u0627\\u0644\\u0645\\u0637\\u0644\\u0648\\u0628\\u0629 \\u0644\\u0625\\u0646\\u0634\\u0627\\u0621 \\u062D\\u0633\\u0627\\u0628 \\u062C\\u062F\\u064A\\u062F\"))), React.createElement(View, {\n        style: styles.InputContainer2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        }\n      }, React.createElement(StyledTextBold, {\n        style: styles.InputContainer2Tilte,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        }\n      }, \"\\u0627\\u0644\\u0627\\u0633\\u0645\"), React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"\\u0627\\u0633\\u0645 \\u0627\\u0644\\u0645\\u0633\\u062A\\u062E\\u062F\\u0645\",\n        placeholderTextColor: \"#A2A2A2\",\n        underlineColorAndroid: \"transparent\",\n        returnKeyType: \"next\",\n        onSubmitEditing: function onSubmitEditing() {\n          _this3.secondTextInput.focus();\n        },\n        onChangeText: function onChangeText(displayName) {\n          return _this3.setState({\n            displayName: displayName\n          });\n        },\n        blurOnSubmit: false,\n        style: styles.Input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        }\n      }))), React.createElement(StyledText, {\n        style: {\n          color: '#F00',\n          fontSize: 12,\n          marginBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        }\n      }, errors[\"name\"]), React.createElement(View, {\n        style: styles.InputContainer2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        }\n      }, React.createElement(StyledTextBold, {\n        style: styles.InputContainer2Tilte,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        }\n      }, \"\\u0627\\u0644\\u0628\\u0631\\u064A\\u062F \\u0627\\u0644\\u0627\\u0644\\u0643\\u062A\\u0631\\u0648\\u0646\\u064A\"), React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"\\u0627\\u0644\\u0628\\u0631\\u064A\\u062F \\u0627\\u0644\\u0627\\u0644\\u0643\\u062A\\u0631\\u0648\\u0646\\u064A\",\n        placeholderTextColor: \"#A2A2A2\",\n        underlineColorAndroid: \"transparent\",\n        returnKeyType: \"next\",\n        keyboardType: \"email-address\",\n        ref: function ref(input) {\n          _this3.secondTextInput = input;\n        },\n        onSubmitEditing: function onSubmitEditing() {\n          _this3.ThirdTextInput.focus();\n        },\n        onChangeText: function onChangeText(email) {\n          return _this3.setState({\n            email: email\n          });\n        },\n        blurOnSubmit: false,\n        style: styles.Input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        }\n      }))), React.createElement(StyledText, {\n        style: {\n          color: '#F00',\n          fontSize: 12,\n          marginBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        }\n      }, errors[\"email\"]), React.createElement(View, {\n        style: styles.InputContainer2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        }\n      }, React.createElement(StyledTextBold, {\n        style: styles.InputContainer2Tilte,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        }\n      }, \"\\u0627\\u0644\\u0647\\u0627\\u062A\\u0641\"), React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"\\u0627\\u0644\\u0647\\u0627\\u062A\\u0641\",\n        placeholderTextColor: \"#A2A2A2\",\n        underlineColorAndroid: \"transparent\",\n        returnKeyType: \"next\",\n        keyboardType: \"phone-pad\",\n        ref: function ref(input) {\n          _this3.ThirdTextInput = input;\n        },\n        onSubmitEditing: function onSubmitEditing() {\n          _this3.fourthTextInput.focus();\n        },\n        onChangeText: function onChangeText(phone) {\n          return _this3.setState({\n            phone: phone\n          });\n        },\n        blurOnSubmit: false,\n        style: styles.Input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        }\n      }))), React.createElement(StyledText, {\n        style: {\n          color: '#F00',\n          fontSize: 12,\n          marginBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        }\n      }, errors[\"phone\"]), React.createElement(View, {\n        style: styles.InputContainer2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        }\n      }, React.createElement(StyledTextBold, {\n        style: styles.InputContainer2Tilte,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        }\n      }, \"\\u0627\\u0644\\u0645\\u062F\\u064A\\u0646\\u0629 : \"), React.createElement(View, {\n        style: styles.pickerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        }\n      }, React.createElement(Picker, {\n        mode: \"dropdown\",\n        selectedValue: this.state.city,\n        style: styles.Input,\n        onValueChange: function onValueChange(city, itemIndex) {\n          return _this3.setState({\n            city: city\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        }\n      }, React.createElement(Picker.Item, {\n        label: \"\\u0645\\u062F\\u064A\\u0646\\u0629 \\u063A\\u0632\\u0629\",\n        value: \"\\u063A\\u0632\\u0629\",\n        style: {\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"\\u0631\\u0641\\u062D\",\n        value: \"\\u0631\\u0641\\u062D\",\n        style: {\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"\\u062E\\u0627\\u0646\\u064A\\u0648\\u0646\\u0633\",\n        value: \"\\u062E\\u0627\\u0646\\u064A\\u0648\\u0646\\u0633\",\n        style: {\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"\\u0627\\u0644\\u0648\\u0633\\u0637\\u0649\",\n        value: \"\\u0627\\u0644\\u0648\\u0633\\u0637\\u0649\",\n        style: {\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        }\n      })))), React.createElement(StyledText, {\n        style: {\n          color: '#F00',\n          fontSize: 12,\n          marginBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        }\n      }, errors[\"city\"]), React.createElement(View, {\n        style: styles.InputContainer2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        }\n      }, React.createElement(StyledTextBold, {\n        style: styles.InputContainer2Tilte,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        }\n      }, \"\\u0643\\u0644\\u0645\\u0629 \\u0627\\u0644\\u0645\\u0631\\u0648\\u0631\"), React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3.securePasswordMethod();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        }\n      }, !this.state.securePassword && React.createElement(Ionicons, {\n        name: \"md-eye\",\n        size: 25,\n        color: \"#8D8D8D\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        }\n      }), this.state.securePassword && React.createElement(Ionicons, {\n        name: \"md-eye-off\",\n        size: 25,\n        color: \"#8D8D8D\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        }\n      })), React.createElement(TextInput, {\n        placeholder: \"\\u0643\\u0644\\u0645\\u0629 \\u0627\\u0644\\u0645\\u0631\\u0648\\u0631\",\n        placeholderTextColor: \"#A2A2A2\",\n        underlineColorAndroid: \"transparent\",\n        secureTextEntry: this.state.securePassword,\n        ref: function ref(input) {\n          _this3.fourthTextInput = input;\n        },\n        onSubmitEditing: function onSubmitEditing() {\n          _this3.sixthTextInput.focus();\n        },\n        returnKeyType: \"done\",\n        onChangeText: function onChangeText(password) {\n          return _this3.setState({\n            password: password\n          });\n        },\n        blurOnSubmit: false,\n        style: styles.Input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        }\n      }))), React.createElement(View, {\n        style: styles.InputContainer2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        }\n      }, React.createElement(StyledTextBold, {\n        style: styles.InputContainer2Tilte,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        }\n      }, \"\\u062A\\u0623\\u0643\\u064A\\u062F \\u0643\\u0644\\u0645\\u0629 \\u0627\\u0644\\u0645\\u0631\\u0648\\u0631\"), React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3.securePasswordMethod2();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        }\n      }, !this.state.securePassword2 && React.createElement(Ionicons, {\n        name: \"md-eye\",\n        size: 25,\n        color: \"#8D8D8D\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        }\n      }), this.state.securePassword2 && React.createElement(Ionicons, {\n        name: \"md-eye-off\",\n        size: 25,\n        color: \"#8D8D8D\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        }\n      })), React.createElement(TextInput, {\n        placeholder: \"\\u0625\\u0639\\u0627\\u062F\\u0629 \\u0643\\u0644\\u0645\\u0629 \\u0627\\u0644\\u0645\\u0631\\u0648\\u0631\",\n        placeholderTextColor: \"#A2A2A2\",\n        underlineColorAndroid: \"transparent\",\n        secureTextEntry: this.state.securePassword2,\n        ref: function ref(input) {\n          _this3.sixthTextInput = input;\n        },\n        onSubmitEditing: function onSubmitEditing() {\n          _this3.register();\n        },\n        returnKeyType: \"done\",\n        onChangeText: function onChangeText(password_confirmation) {\n          return _this3.setState({\n            password_confirmation: password_confirmation\n          });\n        },\n        blurOnSubmit: false,\n        style: styles.Input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        }\n      }))), React.createElement(StyledText, {\n        style: {\n          color: '#F00',\n          fontSize: 12,\n          marginBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        }\n      }, errors[\"password\"]), React.createElement(View, {\n        style: styles.RegisterButtonCont,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        }\n      }, React.createElement(TouchableOpacity, {\n        activeOpacity: 0.5,\n        style: styles.LoginTouch,\n        onPress: function onPress() {\n          _this3.register();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        }\n      }, React.createElement(StyledText, {\n        style: {\n          color: '#fff',\n          fontSize: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        }\n      }, \"\\u062A\\u0633\\u062C\\u064A\\u0644 \\u062D\\u0633\\u0627\\u0628 \\u062C\\u062F\\u064A\\u062F\"))), React.createElement(View, {\n        style: styles.conditionCont,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        }\n      }, React.createElement(TouchableOpacity, {\n        activeOpacity: 1,\n        style: styles.condition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        }\n      }, React.createElement(StyledText, {\n        style: {\n          color: '#69415C',\n          fontSize: 11\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        }\n      }, \"\\u0623\\u0646\\u062A \\u062A\\u0648\\u0627\\u0641\\u0642 \\u0639\\u0644\\u0649 \\u0627\\u0644\\u0634\\u0631\\u0648\\u0637 \\u0648\\u0633\\u064A\\u0627\\u0633\\u0629 \\u0627\\u0644\\u062E\\u0635\\u0648\\u0635\\u064A\\u0629\")))))))))));\n    }\n  }]);\n\n  return RegisterScreen;\n}(Component);\n\nexport default withFirebaseHOC(RegisterScreen);","map":{"version":3,"sources":["C:/Users/jit/Desktop/farhasheri/screens/RegisterScreen/RegisterScreen.js"],"names":["React","Component","KeyboardAwareScrollView","StyledText","StyledTextBold","StyledTextLight","styles","Ionicons","AntDesign","Dialog","DialogContent","NetInfo","HeaderBack","withFirebaseHOC","RegisterScreen","props","_handleConnectivityChange","isConnected","setState","validation","state","displayName","email","phone","password","password_confirmation","isValid","errors","match","length","validName","handleOnSignup","city","firebase","signupWithEmail","currentUser","user","uid","userData","createUserDocument","setTimeout","auth","sendEmailVerification","then","alert","catch","error","console","log","spinner","location","visible","username","area","securePassword","securePassword2","fetch","addEventListener","removeEventListener","containerLinear","StatusBar","width","navigation","marginTop","flexGrow","justifyContent","backgroundColor","paddingHorizontal","flex","KeyBoard","paddingBottom","OrCont","Ortxt","Ortxt2","InputContainer2","InputContainer2Tilte","flexDirection","secondTextInput","focus","Input","color","fontSize","marginBottom","input","ThirdTextInput","fourthTextInput","pickerStyle","itemIndex","textAlign","securePasswordMethod","sixthTextInput","securePasswordMethod2","register","RegisterButtonCont","LoginTouch","conditionCont","condition"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View,StatusBar,Image, TouchableOpacity, ScrollView, TextInput, AsyncStorage, Platform, Picker } from \"react-native\";\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\nimport StyledText from \"../../components/StyledTexts/StyledText\";\r\nimport StyledTextBold from \"../../components/StyledTexts/StyledTextBold\";\r\nimport StyledTextLight from \"../../components/StyledTexts/StyledTextLight\";\r\nimport styles from \"./RegisterScreenStyle\";\r\nimport { Ionicons,AntDesign } from \"@expo/vector-icons\";\r\nimport Dialog, { DialogContent } from \"react-native-popup-dialog\";\r\nimport NetInfo from \"@react-native-community/netinfo\";\r\nimport HeaderBack from '../../components/HeadersComponent/HeaderBack'\r\n//import {withFirebaseHOC} from '../../services/firebase';\r\nimport { withFirebaseHOC } from '../../config/Firebase'\r\n\r\nclass RegisterScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      spinner: false,\r\n      location: null,\r\n      isConnected: null,\r\n      visible:false,   \r\n      username: \"\",\r\n      displayName:\"\",\r\n      password: \"\",\r\n      password_confirmation:'',\r\n      email: '',\r\n      area: '',\r\n      securePassword:true,\r\n      securePassword2:true,\r\n      errors:{},\r\n      phone:'',\r\n      city:'غزة'\r\n      \r\n    }\r\n  }\r\n  componentDidMount() {\r\n    NetInfo.fetch().then(state => {\r\n      let isConnected = state.isConnected;\r\n      if(isConnected){\r\n        this.setState({ isConnected:true });\r\n      }\r\n      else{\r\n        this.setState({ isConnected: false });\r\n      }\r\n    })\r\n    NetInfo.isConnected.addEventListener('connectionChange', this._handleConnectivityChange);\r\n  }\r\n  componentWillUnmount() {\r\n    NetInfo.isConnected.removeEventListener(\r\n      \"connectionChange\",\r\n      this._handleConnectivityChange\r\n    );\r\n  }\r\n  _handleConnectivityChange = (isConnected) => {\r\n    this.setState({ isConnected });\r\n  }\r\n\r\n  securePasswordMethod(){\r\n    this.setState({\r\n      securePassword: !this.state.securePassword\r\n    })\r\n  }\r\n\r\n  securePasswordMethod2(){\r\n    this.setState({\r\n      securePassword2: !this.state.securePassword2\r\n    })\r\n  }\r\n\r\n  register(){\r\n    // this.handleOnSignup(values);\r\n    if(this.validation()){\r\n      this.handleOnSignup();\r\n    }else {\r\n      alert('error');\r\n    }\r\n  }\r\n\r\n  validation = () => {\r\n    const {displayName,email,phone,password,password_confirmation} = this.state;\r\n    let isValid = true;\r\n    let errors = {};\r\n\r\n    if (!displayName.match(/^[a-zA-Z\\u0600-\\u06FF\\s]+$/) || !displayName){\r\n        isValid = false;\r\n        //add Error message\r\n        errors[\"name\"] = \"الاسم يتكون من أحرف عربية أو انجليزية فقط\";\r\n    }\r\n\r\n    if (displayName.length < 3) {\r\n      validName = false;\r\n      errors[\"name\"] = \"الاسم الذي أدخلته قصير للغاية\";\r\n    }\r\n\r\n    if(!email.match(/[^\\d][\\w.]+@\\w+(\\.[A-Za-z]+){1,2}/g) || !email){\r\n      isValid = false;\r\n      errors[\"email\"] = \"البريد الالكتروني الذي أدخلته غير صحيح\";\r\n        //add Error message\r\n    }\r\n\r\n    if (!phone.match(/[0-9]{10}/) || !phone){\r\n      isValid = false;\r\n      errors[\"phone\"] = \"رقم الهاتف الذي أدخلته غير صحيح\";\r\n        //add Error message\r\n    }\r\n\r\n\r\n\r\n    if(password !== password_confirmation){\r\n      isValid = false;\r\n      errors[\"password\"] = \"كلمتا المرور غير متطابقتان\"\r\n    }\r\n\r\n    this.setState({errors})\r\n    return isValid;\r\n  }\r\n\r\n  handleOnSignup =  async () => {\r\n      const {displayName,email,phone,city,password} = this.state;\r\n      try {\r\n        const currentUser = await this.props.firebase.signupWithEmail(\r\n          email,\r\n          password\r\n        )\r\n        \r\n        if(currentUser.user){\r\n          const user = currentUser.user;\r\n          const uid = currentUser.user.uid;\r\n          const userData = { email, displayName, phone,city,uid };\r\n          await this.props.firebase.createUserDocument(user,userData);\r\n        }\r\n\r\n        setTimeout(()=> {\r\n          const currentUser = this.props.firebase.auth.currentUser;\r\n        if(currentUser != null) {\r\n            currentUser.sendEmailVerification().then(function() {\r\n                // Email sent.\r\n                alert('يرجى مراجعة بريدك الالكتروني لتأكيد التسجيل');\r\n              }).catch(function(error) {\r\n                // An error happened.\r\n                alert('error')\r\n              });\r\n        }\r\n        },3000)\r\n\r\n      } catch (err) {\r\n        alert('email already used')\r\n        console.log('Something went wrong: ' + err);\r\n        throw err\r\n      }\r\n\r\n\r\n      // firebase\r\n      //   .auth()   \r\n      //   .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n      //   .then(() =>  this.props.navigation.navigate('RegisterDoneScreen'))\r\n      //   .catch(error =>console.log(error));\r\n \r\n  }\r\n\r\n  render() {\r\n    const {errors,city} = this.state;\r\n    return (\r\n      <>\r\n        <View style={styles.containerLinear}>\r\n          <View style={styles.StatusBar}>\r\n              <StatusBar barStyle=\"light-content\"/>\r\n          </View>\r\n          <View style={{width:'100%'}}>\r\n            <HeaderBack navigation={this.props.navigation} title=''></HeaderBack>\r\n          </View>\r\n          <View style={{ width: '100%',marginTop: 10}}>\r\n            <ScrollView\r\n              style={{ width: '100%' }}\r\n              showsVerticalScrollIndicator={false}\r\n              contentContainerStyle={{flexGrow:1,justifyContent:'flex-start',backgroundColor:'#fff',paddingHorizontal:20}}\r\n              snapToStart={true}>\r\n              \r\n              {/* <SignUpForm /> */}\r\n\r\n              <View style={{ flex: 1}}>\r\n                <View style={styles.KeyBoard}>\r\n                  <KeyboardAwareScrollView\r\n                    keyboardDismissMode=\"on-drag\" //work only on ios\r\n                    enableOnAndroid={true}\r\n                    style={{ width: \"100%\",paddingBottom: 100}}\r\n                  >\r\n                    <View style={{ flex: 2}}>\r\n                      <View style={styles.OrCont}>\r\n                        <View>\r\n                          <StyledTextBold style={styles.Ortxt}>\r\n                            تسجيل حساب جديد\r\n                          </StyledTextBold>\r\n                        </View>\r\n                        <View>\r\n                          <StyledText style={styles.Ortxt2}>\r\n                            يرجى إدخال جميع البيانات المطلوبة لإنشاء حساب جديد\r\n                          </StyledText>\r\n                        </View>\r\n                      </View>\r\n\r\n                      <View style={styles.InputContainer2}>\r\n                        <StyledTextBold style={styles.InputContainer2Tilte}>الاسم</StyledTextBold>\r\n                        <View style={{ flexDirection: 'row' }}>\r\n                          <TextInput\r\n                            placeholder=\"اسم المستخدم\"\r\n                            placeholderTextColor=\"#A2A2A2\"\r\n                            underlineColorAndroid=\"transparent\"\r\n                            returnKeyType={\"next\"}\r\n                            onSubmitEditing={() => {this.secondTextInput.focus()}}\r\n                            onChangeText={(displayName) => this.setState({ displayName })}\r\n                            blurOnSubmit={false}\r\n                            style={styles.Input}\r\n                          />\r\n                        </View>\r\n                      </View>\r\n                      <StyledText style={{color:'#F00',fontSize:12,marginBottom:10}}>{errors[\"name\"]}</StyledText>\r\n\r\n                      <View style={styles.InputContainer2}>\r\n                        <StyledTextBold style={styles.InputContainer2Tilte}>البريد الالكتروني</StyledTextBold>\r\n                        <View style={{ flexDirection: 'row' }}>\r\n                          <TextInput\r\n                            placeholder=\"البريد الالكتروني\"\r\n                            placeholderTextColor=\"#A2A2A2\"\r\n                            underlineColorAndroid=\"transparent\"\r\n                            returnKeyType={\"next\"}\r\n                            keyboardType=\"email-address\"\r\n                            ref={(input) => {this.secondTextInput = input}}\r\n                            onSubmitEditing={() => {this.ThirdTextInput.focus()}}\r\n                            onChangeText={(email) => this.setState({ email })}\r\n                            blurOnSubmit={false}\r\n                            style={styles.Input}\r\n                          />\r\n                        </View>\r\n                      </View>\r\n\r\n                      <StyledText style={{color:'#F00',fontSize:12,marginBottom:10}}>{errors[\"email\"]}</StyledText>\r\n\r\n                      <View style={styles.InputContainer2}>\r\n                        <StyledTextBold style={styles.InputContainer2Tilte}>الهاتف</StyledTextBold>\r\n                        <View style={{ flexDirection: 'row' }}>\r\n                          <TextInput\r\n                            placeholder=\"الهاتف\"\r\n                            placeholderTextColor=\"#A2A2A2\"\r\n                            underlineColorAndroid=\"transparent\"\r\n                            returnKeyType={\"next\"}\r\n                            keyboardType='phone-pad'\r\n                            ref={(input) => {this.ThirdTextInput = input}}\r\n                            onSubmitEditing={() => {this.fourthTextInput.focus()}}\r\n                            onChangeText={(phone) => this.setState({ phone })}\r\n                            blurOnSubmit={false}\r\n                            style={styles.Input}\r\n                          />\r\n                        </View>\r\n                      </View>\r\n\r\n                      <StyledText style={{color:'#F00',fontSize:12,marginBottom:10}}>{errors[\"phone\"]}</StyledText>\r\n\r\n                      <View style={styles.InputContainer2}>\r\n                      <StyledTextBold style={styles.InputContainer2Tilte}>المدينة : </StyledTextBold>\r\n                       <View style={styles.pickerStyle}>\r\n                            <Picker\r\n                            mode=\"dropdown\"\r\n                            selectedValue={this.state.city}\r\n                            style={styles.Input}\r\n                            onValueChange={(city, itemIndex) => this.setState({city})}\r\n                            >\r\n                            <Picker.Item label=\"مدينة غزة\" value=\"غزة\" style={{textAlign: 'right'}} />\r\n                            <Picker.Item label=\"رفح\" value=\"رفح\" style={{textAlign: 'right'}} />\r\n                            <Picker.Item label=\"خانيونس\" value=\"خانيونس\" style={{textAlign: 'right'}} />\r\n                            <Picker.Item label=\"الوسطى\" value=\"الوسطى\" style={{textAlign: 'right'}} />\r\n\r\n                            </Picker>\r\n                            </View>\r\n                        </View>\r\n\r\n                      <StyledText style={{color:'#F00',fontSize:12,marginBottom:10}}>{errors[\"city\"]}</StyledText>\r\n\r\n\r\n                      <View style={styles.InputContainer2}>\r\n                        <StyledTextBold style={styles.InputContainer2Tilte}>كلمة المرور</StyledTextBold>\r\n                        <View style={{ flexDirection: 'row' }}>\r\n                          <TouchableOpacity onPress={()=>this.securePasswordMethod()}>\r\n                            {!this.state.securePassword && <Ionicons name='md-eye' size={25} color='#8D8D8D' />}\r\n                            {this.state.securePassword && <Ionicons name='md-eye-off' size={25} color='#8D8D8D' />}\r\n                          </TouchableOpacity>\r\n                          <TextInput\r\n                            placeholder=\"كلمة المرور\"\r\n                            placeholderTextColor=\"#A2A2A2\"\r\n                            underlineColorAndroid=\"transparent\"\r\n                            secureTextEntry={this.state.securePassword}\r\n                            ref={(input) => {this.fourthTextInput = input}}\r\n                            onSubmitEditing={() => {this.sixthTextInput.focus()}}\r\n                            returnKeyType={\"done\"}\r\n                            onChangeText={(password) => this.setState({ password })}\r\n                            blurOnSubmit={false}\r\n                            style={styles.Input}\r\n                          />\r\n                        </View>\r\n                      </View>\r\n\r\n                      <View style={styles.InputContainer2}>\r\n                        <StyledTextBold style={styles.InputContainer2Tilte}>تأكيد كلمة المرور</StyledTextBold>\r\n                        <View style={{ flexDirection: 'row' }}>\r\n                          <TouchableOpacity onPress={()=>this.securePasswordMethod2()}>\r\n                            {!this.state.securePassword2 && <Ionicons name='md-eye' size={25} color='#8D8D8D' />}\r\n                            {this.state.securePassword2 && <Ionicons name='md-eye-off' size={25} color='#8D8D8D' />}\r\n                          </TouchableOpacity>\r\n                          <TextInput\r\n                            placeholder=\"إعادة كلمة المرور\"\r\n                            placeholderTextColor=\"#A2A2A2\"\r\n                            underlineColorAndroid=\"transparent\"\r\n                            secureTextEntry={this.state.securePassword2}\r\n                            ref={(input) => {this.sixthTextInput = input}}\r\n                            onSubmitEditing={() => {this.register()}}\r\n                            returnKeyType={\"done\"}\r\n                            onChangeText={(password_confirmation) => this.setState({ password_confirmation })}\r\n                            blurOnSubmit={false}\r\n                            style={styles.Input}\r\n                          />\r\n                        </View>\r\n                      </View>\r\n\r\n                      <StyledText style={{color:'#F00',fontSize:12,marginBottom:10}}>{errors[\"password\"]}</StyledText>\r\n\r\n\r\n                      <View style={styles.RegisterButtonCont}>\r\n                        <TouchableOpacity activeOpacity={0.5} style={styles.LoginTouch}\r\n                          onPress={() => {this.register()}}\r\n                        >\r\n                          <StyledText style={{color:'#fff',fontSize:15}}>تسجيل حساب جديد</StyledText>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n\r\n                      <View style={styles.conditionCont}>\r\n                        <TouchableOpacity activeOpacity={1} style={styles.condition}>\r\n                          <StyledText style={{color:'#69415C',fontSize:11}}>\r\n                            أنت توافق على الشروط وسياسة الخصوصية\r\n                          </StyledText>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n\r\n                    </View>\r\n\r\n                  </KeyboardAwareScrollView>\r\n                </View>\r\n              </View>\r\n\r\n            </ScrollView>\r\n          </View>\r\n        </View>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebaseHOC(RegisterScreen)\r\n\r\n"]},"metadata":{},"sourceType":"module"}